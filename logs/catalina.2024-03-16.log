16-Mar-2024 15:49:50.412 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 15:49:50.423 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 15:49:50.424 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 15:49:50.425 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 15:49:50.426 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 15:49:50.427 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 15:49:50.427 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 15:49:50.427 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 15:49:50.428 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 15:49:50.428 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 15:49:50.429 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 15:49:50.450 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 15:49:50.450 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 15:49:50.451 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 15:49:50.451 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 15:49:50.451 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 15:49:50.452 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 15:49:50.452 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 15:49:50.452 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 15:49:50.453 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 15:49:50.453 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 15:49:50.453 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\lib\idea_rt.jar=65424:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\bin
16-Mar-2024 15:49:50.453 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 15:49:50.465 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 15:49:50.504 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 15:49:51.286 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 15:49:51.341 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [1329] milliseconds
16-Mar-2024 15:49:51.494 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 15:49:51.494 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 15:49:51.534 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 15:49:56.891 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 15:49:59.117 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:49:59.717 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 15:49:59.748 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:49:59.751 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:49:59.751 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:49:59.757 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:50:00.055 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:50:01.577 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:50:01.599 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:50:01.600 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:50:01.600 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:50:01.601 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:50:01.622 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:50:02.874 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:50:02.881 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:50:05.746 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 15:50:10.187 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:50:13.157 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [21,623] ms
16-Mar-2024 15:50:13.165 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 15:50:13.212 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [21870] milliseconds
16-Mar-2024 15:50:41.812 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:50:41.819 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:50:41.819 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:50:41.820 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:50:41.820 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:50:41.827 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:50:41.877 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:50:41.877 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:50:41.878 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:50:41.878 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:50:41.879 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:50:41.879 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:50:41.903 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:50:41.905 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:50:42.114 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:50:45.210 WARNING [http-nio-8080-exec-10] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 56 more
16-Mar-2024 15:51:18.304 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:51:18.311 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:51:18.312 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:51:18.312 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:51:18.312 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:51:18.316 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:51:18.358 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:51:18.359 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:51:18.360 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:51:18.360 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:51:18.362 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:51:18.362 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:51:18.380 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:51:18.380 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:51:18.560 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:51:18.565 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 56 more
16-Mar-2024 15:55:02.906 INFO [http-nio-8080-exec-7] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:02.911 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:02.912 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:02.912 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:02.913 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:02.918 INFO [http-nio-8080-exec-7] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:02.960 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:02.960 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:02.961 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:02.961 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:02.961 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:02.961 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:02.993 WARN [http-nio-8080-exec-7] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:02.993 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:03.146 INFO [http-nio-8080-exec-7] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:03.154 WARNING [http-nio-8080-exec-7] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 56 more
16-Mar-2024 15:55:13.597 INFO [http-nio-8080-exec-1] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:13.603 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:13.603 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:13.603 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:13.603 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:13.607 INFO [http-nio-8080-exec-1] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:13.643 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:13.643 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:13.643 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:13.643 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:13.644 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:13.644 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:13.664 WARN [http-nio-8080-exec-1] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:13.665 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:13.821 INFO [http-nio-8080-exec-1] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:16.864 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:16.866 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:16.866 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:16.866 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:16.866 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:16.867 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:16.899 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:16.899 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:16.899 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:16.900 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:16.900 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:16.900 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:16.916 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:16.916 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:17.067 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:17.074 WARNING [http-nio-8080-exec-4] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 56 more
16-Mar-2024 15:55:18.546 INFO [http-nio-8080-exec-8] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:18.548 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:18.548 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:18.549 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:18.549 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:18.550 INFO [http-nio-8080-exec-8] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:18.574 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:18.574 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:18.574 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:18.574 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:18.575 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:18.575 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:18.592 WARN [http-nio-8080-exec-8] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:18.592 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:18.716 INFO [http-nio-8080-exec-8] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:19.757 INFO [http-nio-8080-exec-9] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:19.764 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:19.764 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:19.764 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:19.765 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:19.769 INFO [http-nio-8080-exec-9] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:19.807 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:19.808 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:19.808 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:19.808 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:19.808 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:19.809 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:19.839 WARN [http-nio-8080-exec-9] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:19.840 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:19.992 INFO [http-nio-8080-exec-9] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:19.998 WARNING [http-nio-8080-exec-9] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 56 more
16-Mar-2024 15:55:20.569 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:20.571 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:20.571 INFO [http-nio-8080-exec-5] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:20.576 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:20.576 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:20.576 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:20.577 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:20.577 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:20.577 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:20.578 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:20.578 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:20.578 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:20.578 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:20.578 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:20.578 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:20.580 INFO [http-nio-8080-exec-5] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:20.580 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:20.582 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:20.618 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:20.619 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:20.619 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:20.619 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:20.619 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:20.620 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:20.620 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:20.620 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:20.620 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:20.620 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:20.620 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:20.620 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:20.620 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:20.620 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:20.621 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:20.621 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:20.621 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:20.621 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:20.637 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:20.638 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:20.640 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:20.640 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:20.641 WARN [http-nio-8080-exec-5] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:20.642 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:20.861 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:20.865 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:20.869 INFO [http-nio-8080-exec-5] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:20.873 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 56 more
16-Mar-2024 15:55:20.922 WARNING [http-nio-8080-exec-5] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Boek.categorien: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Uitlening["boek"]->entity.Boek["categorien"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Boek.categorien: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 59 more
16-Mar-2024 15:55:21.767 INFO [http-nio-8080-exec-7] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:21.767 INFO [http-nio-8080-exec-8] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:21.768 INFO [http-nio-8080-exec-6] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:21.771 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:21.771 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:21.772 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:21.772 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:21.773 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:21.773 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:21.773 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:21.773 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:21.773 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:21.773 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:21.774 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:21.775 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:21.776 INFO [http-nio-8080-exec-7] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:21.776 INFO [http-nio-8080-exec-8] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:21.776 INFO [http-nio-8080-exec-6] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:21.802 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:21.802 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:21.802 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:21.802 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:21.802 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:21.802 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:21.803 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:21.803 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:21.803 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:21.803 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:21.803 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:21.803 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:21.804 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:21.804 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:21.804 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:21.804 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:21.805 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:21.805 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:21.830 WARN [http-nio-8080-exec-7] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:21.830 WARN [http-nio-8080-exec-8] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:21.830 WARN [http-nio-8080-exec-6] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:21.831 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:21.831 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:21.831 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:22.064 INFO [http-nio-8080-exec-8] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:22.068 INFO [http-nio-8080-exec-7] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:22.071 WARNING [http-nio-8080-exec-8] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 56 more
16-Mar-2024 15:55:22.072 INFO [http-nio-8080-exec-6] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:22.078 WARNING [http-nio-8080-exec-7] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Boek.categorien: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Uitlening["boek"]->entity.Boek["categorien"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Boek.categorien: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 59 more
16-Mar-2024 15:55:22.284 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:22.289 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:22.290 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:22.291 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:22.291 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:22.292 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:22.324 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:22.324 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:22.324 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:22.324 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:22.324 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:22.324 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:22.339 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:22.339 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:22.461 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:22.467 WARNING [http-nio-8080-exec-10] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 56 more
16-Mar-2024 15:55:23.236 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:23.238 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:23.238 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:23.239 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:23.239 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:23.242 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:23.273 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:23.273 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:23.273 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:23.273 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:23.274 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:23.274 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:23.293 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:23.293 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:23.419 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:55:23.427 WARNING [http-nio-8080-exec-3] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Lid.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentSet.size(PersistentSet.java:151)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 56 more
16-Mar-2024 15:55:24.867 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:55:24.872 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:55:24.872 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:55:24.872 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:55:24.872 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:55:24.876 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:55:24.906 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:55:24.906 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:55:24.906 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:55:24.906 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:55:24.906 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:55:24.906 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:55:24.919 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:55:24.920 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:55:25.035 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 15:56:04.568 INFO [http-nio-8080-exec-6] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 15:56:04.573 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 15:56:04.573 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 15:56:04.573 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 15:56:04.573 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 15:56:04.577 INFO [http-nio-8080-exec-6] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 15:56:04.608 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 15:56:04.609 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 15:56:04.609 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 15:56:04.609 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 15:56:04.609 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 15:56:04.609 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 15:56:04.628 WARN [http-nio-8080-exec-6] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 15:56:04.628 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 15:56:04.772 INFO [http-nio-8080-exec-6] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:38:12.633 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:38:12.692 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 16:38:12.943 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 16:38:12.946 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.948 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.949 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.950 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.952 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.954 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.955 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.956 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.957 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.958 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.959 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.961 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.962 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.963 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.964 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.965 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.966 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.970 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:12.971 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:38:13.064 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:38:13.119 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:38:37.494 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 16:38:37.509 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 16:38:37.510 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 16:38:37.511 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 16:38:37.512 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 16:38:37.512 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 16:38:37.512 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 16:38:37.513 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 16:38:37.514 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 16:38:37.514 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 16:38:37.515 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:38:37.548 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 16:38:37.549 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 16:38:37.549 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 16:38:37.549 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 16:38:37.550 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 16:38:37.550 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:50817,suspend=y,server=n
16-Mar-2024 16:38:37.551 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:38:37.551 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 16:38:37.551 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 16:38:37.552 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 16:38:37.552 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 16:38:37.552 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 16:38:37.552 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 16:38:37.560 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 16:38:37.583 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 16:38:38.682 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:38:38.796 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2134] milliseconds
16-Mar-2024 16:38:39.019 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 16:38:39.019 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 16:38:39.064 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 16:38:48.305 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 16:38:48.847 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [151] milliseconds.
16-Mar-2024 16:38:51.483 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:38:52.273 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 16:38:52.322 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:38:52.327 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:38:52.327 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:38:52.337 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:38:52.671 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:38:54.951 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:38:54.995 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:38:54.996 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:38:54.997 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:38:54.999 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:38:55.038 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:38:59.918 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:38:59.990 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:39:09.900 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 16:39:23.799 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:39:30.698 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [51,633] ms
16-Mar-2024 16:39:30.747 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:39:30.828 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [52031] milliseconds
16-Mar-2024 16:40:09.232 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:40:09.256 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:40:09.257 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:40:09.257 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:40:09.258 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:40:09.274 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:40:09.395 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:40:09.396 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:40:09.396 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:40:09.396 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:40:09.397 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:40:09.398 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:40:09.465 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:40:09.472 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:40:10.147 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:41:01.392 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions SQL Error: 1054, SQLState: 42S22
16-Mar-2024 16:41:01.393 ERROR [http-nio-8080-exec-3] org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions Unknown column 'u1_0.boek_boek_id' in 'on clause'
16-Mar-2024 16:41:01.510 WARNING [http-nio-8080-exec-3] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select u1_0.lid_id,u1_0.Uitlening_id,b1_0.boek_id,b1_0.aantal,b1_0.auteur,b1_0.Titel,l1_0.lid_id,l1_0.adres,l1_0.naam,l1_0.telefoonnummer,u1_0.teruggebracht_op,u1_0.uitgeleend_op from uitleningen u1_0 left join boeken b1_0 on b1_0.boek_id=u1_0.boek_boek_id left join leden l1_0 on l1_0.lid_id=u1_0.lid_lid_id where u1_0.lid_id=?] [Unknown column 'u1_0.boek_boek_id' in 'on clause'] [n/a]
		at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)
		at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
		at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
		at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
		at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265)
		at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
		at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218)
		at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98)
		at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19)
		at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66)
		at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:181)
		at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
		at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
		at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
		at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
		at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
		at org.hibernate.loader.ast.internal.CollectionLoaderSingleKey.load(CollectionLoaderSingleKey.java:120)
		at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:680)
		at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:67)
		at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
		at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:1692)
		at org.hibernate.collection.spi.AbstractPersistentCollection.lambda$initialize$3(AbstractPersistentCollection.java:615)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
		at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
		at org.hibernate.collection.spi.AbstractPersistentCollection.forceInitialization(AbstractPersistentCollection.java:816)
		at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1137)
		at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1123)
		at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:234)
		at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
		at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
		at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
		at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
		at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
		at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
		at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:359)
		at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:300)
		at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
		at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
		at org.hibernate.query.Query.getResultList(Query.java:120)
		at repository.LidDAO.getAllLeden(LidDAO.java:52)
		at service.LidService.getAllLeden(LidService.java:31)
		at controller.LidController.getAllLeden(LidController.java:55)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:568)
		at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
		at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:146)
		at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:189)
		at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
		at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:93)
		at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:478)
		at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:400)
		at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:261)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'u1_0.boek_boek_id' in 'on clause'
		at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
		at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
		at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
		at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968)
		at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
		... 85 more
16-Mar-2024 16:41:59.006 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:41:59.030 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 16:41:59.081 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 16:41:59.083 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:41:59.084 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:41:59.085 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:41:59.112 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:41:59.135 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:42:11.748 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 16:42:11.761 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 16:42:11.762 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 16:42:11.763 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 16:42:11.763 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 16:42:11.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 16:42:11.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 16:42:11.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 16:42:11.765 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 16:42:11.765 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 16:42:11.765 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:42:11.806 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 16:42:11.806 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 16:42:11.807 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 16:42:11.807 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 16:42:11.807 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 16:42:11.808 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:51075,suspend=y,server=n
16-Mar-2024 16:42:11.808 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:42:11.808 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 16:42:11.808 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 16:42:11.809 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 16:42:11.809 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 16:42:11.809 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 16:42:11.810 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 16:42:11.818 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 16:42:11.847 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 16:42:12.922 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:42:13.016 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2096] milliseconds
16-Mar-2024 16:42:13.239 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 16:42:13.240 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 16:42:13.286 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 16:42:23.262 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 16:42:23.722 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [128] milliseconds.
16-Mar-2024 16:42:26.338 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:42:27.064 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 16:42:27.108 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:42:27.113 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:42:27.114 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:42:27.120 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:42:27.468 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:42:29.347 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:42:29.376 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:42:29.376 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:42:29.378 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:42:29.378 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:42:29.406 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:42:31.666 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:42:31.686 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:42:38.653 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 16:42:46.446 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:42:50.779 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [37,493] ms
16-Mar-2024 16:42:50.791 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:42:50.896 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [37879] milliseconds
16-Mar-2024 16:44:29.972 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:44:29.986 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:44:29.987 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:44:29.987 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:44:29.987 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:44:29.998 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:44:30.091 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:44:30.092 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:44:30.093 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:44:30.093 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:44:30.093 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:44:30.094 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:44:30.143 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:44:30.145 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:44:30.677 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:44:40.286 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions SQL Error: 1054, SQLState: 42S22
16-Mar-2024 16:44:40.287 ERROR [http-nio-8080-exec-3] org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions Unknown column 'u1_0.boek_boek_id' in 'on clause'
16-Mar-2024 16:45:15.765 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions SQL Error: 1054, SQLState: 42S22
16-Mar-2024 16:45:15.765 ERROR [http-nio-8080-exec-3] org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions Unknown column 'u1_0.boek_boek_id' in 'on clause'
16-Mar-2024 16:46:14.196 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions SQL Error: 1054, SQLState: 42S22
16-Mar-2024 16:46:14.197 ERROR [http-nio-8080-exec-3] org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions Unknown column 'u1_0.boek_boek_id' in 'on clause'
16-Mar-2024 16:46:14.242 WARNING [http-nio-8080-exec-3] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select u1_0.lid_id,u1_0.Uitlening_id,b1_0.boek_id,b1_0.aantal,b1_0.auteur,b1_0.Titel,l1_0.lid_id,l1_0.adres,l1_0.naam,l1_0.telefoonnummer,u1_0.teruggebracht_op,u1_0.uitgeleend_op from uitleningen u1_0 left join boeken b1_0 on b1_0.boek_id=u1_0.boek_boek_id left join leden l1_0 on l1_0.lid_id=u1_0.lid_lid_id where u1_0.lid_id=?] [Unknown column 'u1_0.boek_boek_id' in 'on clause'] [n/a]
		at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)
		at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
		at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
		at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
		at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265)
		at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
		at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218)
		at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98)
		at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19)
		at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66)
		at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:181)
		at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
		at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
		at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
		at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
		at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
		at org.hibernate.loader.ast.internal.CollectionLoaderSingleKey.load(CollectionLoaderSingleKey.java:120)
		at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:680)
		at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:67)
		at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
		at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:1692)
		at org.hibernate.collection.spi.AbstractPersistentCollection.lambda$initialize$3(AbstractPersistentCollection.java:615)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
		at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
		at org.hibernate.collection.spi.AbstractPersistentCollection.forceInitialization(AbstractPersistentCollection.java:816)
		at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1137)
		at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:1123)
		at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:234)
		at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
		at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
		at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
		at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
		at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
		at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137)
		at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:359)
		at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:300)
		at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
		at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
		at org.hibernate.query.Query.getResultList(Query.java:120)
		at repository.LidDAO.getAllLeden(LidDAO.java:52)
		at service.LidService.getAllLeden(LidService.java:31)
		at controller.LidController.getAllLeden(LidController.java:55)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:568)
		at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
		at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:146)
		at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:189)
		at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
		at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:93)
		at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:478)
		at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:400)
		at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:261)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'u1_0.boek_boek_id' in 'on clause'
		at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
		at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
		at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
		at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968)
		at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
		... 85 more
16-Mar-2024 16:48:18.226 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:48:18.254 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 16:48:18.307 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 16:48:18.309 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:48:18.311 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:48:18.312 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:48:18.337 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:48:18.358 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:48:28.980 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 16:48:28.993 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 16:48:28.995 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 16:48:28.995 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 16:48:28.996 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 16:48:28.996 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 16:48:28.996 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 16:48:28.996 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 16:48:28.997 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 16:48:28.997 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 16:48:28.998 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:48:29.033 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 16:48:29.035 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 16:48:29.036 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 16:48:29.036 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 16:48:29.037 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 16:48:29.037 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:51500,suspend=y,server=n
16-Mar-2024 16:48:29.037 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:48:29.038 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 16:48:29.038 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 16:48:29.038 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 16:48:29.039 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 16:48:29.039 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 16:48:29.039 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 16:48:29.047 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 16:48:29.066 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 16:48:30.051 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:48:30.147 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [1955] milliseconds
16-Mar-2024 16:48:30.346 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 16:48:30.347 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 16:48:30.399 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 16:48:39.341 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 16:48:39.843 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [118] milliseconds.
16-Mar-2024 16:48:42.296 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:48:43.204 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 16:48:43.245 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:48:43.249 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:48:43.249 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:48:43.256 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:48:43.616 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:48:45.601 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:48:45.629 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:48:45.629 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:48:45.630 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:48:45.630 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:48:45.660 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:48:47.842 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:48:47.858 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:48:50.174 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState.stop HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:48:50.226 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [19,827] ms
16-Mar-2024 16:48:50.241 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:48:50.304 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [20156] milliseconds
16-Mar-2024 16:51:29.699 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:51:29.720 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 16:51:29.736 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 16:51:29.738 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:51:29.757 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:51:29.775 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:51:39.419 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 16:51:39.431 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 16:51:39.431 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 16:51:39.432 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 16:51:39.432 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 16:51:39.433 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 16:51:39.433 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 16:51:39.434 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 16:51:39.435 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 16:51:39.436 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 16:51:39.436 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:51:39.467 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 16:51:39.468 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 16:51:39.469 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 16:51:39.470 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 16:51:39.470 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 16:51:39.471 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:51698,suspend=y,server=n
16-Mar-2024 16:51:39.471 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:51:39.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 16:51:39.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 16:51:39.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 16:51:39.473 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 16:51:39.473 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 16:51:39.473 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 16:51:39.480 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 16:51:39.508 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 16:51:40.652 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:51:40.736 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2095] milliseconds
16-Mar-2024 16:51:40.985 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 16:51:40.986 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 16:51:41.031 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 16:51:51.625 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 16:51:52.343 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [234] milliseconds.
16-Mar-2024 16:51:55.843 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:51:56.664 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 16:51:56.724 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:51:56.728 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:51:56.729 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:51:56.743 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:51:57.319 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:51:59.682 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:51:59.710 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:51:59.710 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:51:59.711 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:51:59.712 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:51:59.735 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:52:01.916 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:52:01.939 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:52:05.533 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState.stop HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:52:05.588 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [24,558] ms
16-Mar-2024 16:52:05.603 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:52:05.661 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [24924] milliseconds
16-Mar-2024 16:52:19.465 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:52:19.506 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 16:52:19.521 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 16:52:19.523 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:52:19.550 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:52:19.572 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:52:29.517 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 16:52:29.540 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 16:52:29.541 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 16:52:29.542 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 16:52:29.543 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 16:52:29.543 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 16:52:29.544 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 16:52:29.544 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 16:52:29.545 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 16:52:29.545 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 16:52:29.546 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:52:29.612 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 16:52:29.612 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 16:52:29.613 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 16:52:29.613 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 16:52:29.614 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 16:52:29.614 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:51750,suspend=y,server=n
16-Mar-2024 16:52:29.615 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:52:29.616 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 16:52:29.617 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 16:52:29.619 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 16:52:29.619 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 16:52:29.620 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 16:52:29.621 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 16:52:29.631 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 16:52:29.684 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 16:52:31.249 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:52:31.354 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2665] milliseconds
16-Mar-2024 16:52:31.626 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 16:52:31.627 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 16:52:31.701 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 16:52:42.781 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 16:52:43.271 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [129] milliseconds.
16-Mar-2024 16:52:45.730 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:52:46.463 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 16:52:46.502 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:52:46.506 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:52:46.507 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:52:46.513 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:52:46.846 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:52:48.622 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:52:48.650 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:52:48.651 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:52:48.651 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:52:48.652 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:52:48.679 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:52:50.585 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:52:50.605 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:52:56.704 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 16:53:04.587 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:53:08.515 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [36,814] ms
16-Mar-2024 16:53:08.527 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:53:08.584 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [37228] milliseconds
16-Mar-2024 16:53:20.030 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:53:20.046 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:53:20.047 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:53:20.047 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:53:20.047 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:53:20.057 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:53:20.147 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:53:20.148 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:53:20.148 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:53:20.149 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:53:20.150 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:53:20.150 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:53:20.198 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:53:20.200 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:53:20.731 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:53:50.197 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	java.lang.NoClassDefFoundError: com/fasterxml/jackson/module/jaxb/JaxbAnnotationIntrospector
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospector(JsonMapperConfigurator.java:111)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospectors(JsonMapperConfigurator.java:86)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.cfg.MapperConfiguratorBase._setAnnotations(MapperConfiguratorBase.java:123)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator.getDefaultMapper(JsonMapperConfigurator.java:47)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.locateMapper(ProviderBase.java:941)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase._endpointForWriting(ProviderBase.java:713)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:588)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1353)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1165)
		... 54 more
16-Mar-2024 16:54:46.586 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:54:46.596 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:54:46.597 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:54:46.597 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:54:46.598 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:54:46.616 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:54:46.696 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:54:46.697 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:54:46.698 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:54:46.699 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:54:46.700 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:54:46.705 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:54:46.744 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:54:46.745 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:54:46.950 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:55:41.188 SEVERE [http-nio-8080-exec-4] org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse An I/O error has occurred while writing a response message entity to the container output stream.
	org.glassfish.jersey.server.internal.process.MappableException: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"])
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:67)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"])
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:787)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	Caused by: java.lang.StackOverflowError
		at java.base/java.lang.ClassLoader.defineClass1(Native Method)
		at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)
		at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
		at org.apache.catalina.loader.WebappClassLoaderBase.findClassInternal(WebappClassLoaderBase.java:2352)
		at org.apache.catalina.loader.WebappClassLoaderBase.findClass(WebappClassLoaderBase.java:800)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1317)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1165)
		at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
16-Mar-2024 16:55:45.108 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:55:45.136 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 16:55:45.160 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 16:55:45.162 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:55:45.164 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:55:45.164 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:55:45.166 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 16:55:45.188 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:55:45.203 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:56:36.117 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 16:56:36.131 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 16:56:36.131 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 16:56:36.132 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 16:56:36.132 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 16:56:36.133 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 16:56:36.133 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 16:56:36.135 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 16:56:36.136 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 16:56:36.138 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 16:56:36.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:56:36.169 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 16:56:36.170 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 16:56:36.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 16:56:36.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 16:56:36.172 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 16:56:36.172 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:51999,suspend=y,server=n
16-Mar-2024 16:56:36.172 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 16:56:36.173 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 16:56:36.173 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 16:56:36.173 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 16:56:36.174 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 16:56:36.174 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 16:56:36.174 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 16:56:36.182 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 16:56:36.201 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 16:56:37.712 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:56:37.812 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2428] milliseconds
16-Mar-2024 16:56:38.079 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 16:56:38.079 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 16:56:38.117 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 16:56:47.239 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 16:56:47.763 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [132] milliseconds.
16-Mar-2024 16:56:50.223 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:56:51.012 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 16:56:51.052 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:56:51.056 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:56:51.057 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:56:51.063 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:56:51.422 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:56:53.296 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:56:53.327 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:56:53.328 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:56:53.328 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:56:53.329 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:56:53.354 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:56:55.325 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:56:55.344 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:57:02.431 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 16:57:10.617 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:57:14.792 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [36,674] ms
16-Mar-2024 16:57:14.809 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 16:57:14.893 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [37079] milliseconds
16-Mar-2024 16:57:22.718 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 16:57:22.736 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 16:57:22.737 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 16:57:22.738 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 16:57:22.738 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 16:57:22.748 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 16:57:22.831 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 16:57:22.832 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 16:57:22.833 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 16:57:22.835 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 16:57:22.837 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 16:57:22.837 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 16:57:22.886 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 16:57:22.890 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 16:57:23.492 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 16:58:06.323 SEVERE [http-nio-8080-exec-2] org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse An I/O error has occurred while writing a response message entity to the container output stream.
	org.glassfish.jersey.server.internal.process.MappableException: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"])
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:67)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["lid"]->entity.Lid["uitleningen"])
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:787)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	Caused by: java.lang.StackOverflowError
		at java.base/java.lang.ClassLoader.defineClass1(Native Method)
		at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)
		at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
		at org.apache.catalina.loader.WebappClassLoaderBase.findClassInternal(WebappClassLoaderBase.java:2352)
		at org.apache.catalina.loader.WebappClassLoaderBase.findClass(WebappClassLoaderBase.java:800)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1317)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1165)
		at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
16-Mar-2024 17:01:52.992 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:01:53.020 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 17:01:53.086 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 17:01:53.087 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:01:53.089 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:01:53.090 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:01:53.124 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:01:53.156 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:06:21.641 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 17:06:21.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 17:06:21.658 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 17:06:21.659 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 17:06:21.659 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 17:06:21.660 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 17:06:21.660 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 17:06:21.660 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 17:06:21.661 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 17:06:21.661 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 17:06:21.662 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 17:06:21.709 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 17:06:21.710 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 17:06:21.711 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 17:06:21.711 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 17:06:21.711 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 17:06:21.712 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:52582,suspend=y,server=n
16-Mar-2024 17:06:21.712 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 17:06:21.712 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 17:06:21.713 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 17:06:21.713 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 17:06:21.714 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 17:06:21.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 17:06:21.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 17:06:21.728 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 17:06:21.754 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 17:06:22.874 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:06:22.974 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2103] milliseconds
16-Mar-2024 17:06:23.202 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 17:06:23.204 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 17:06:23.245 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 17:06:33.507 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 17:06:34.090 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [180] milliseconds.
16-Mar-2024 17:06:36.990 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:06:37.725 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 17:06:37.764 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:06:37.770 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:06:37.771 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:06:37.777 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:06:38.080 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:06:39.849 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:06:39.876 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:06:39.877 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:06:39.877 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:06:39.878 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:06:39.902 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:06:42.270 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:06:42.292 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:06:48.217 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 17:06:55.972 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:07:00.784 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [37,539] ms
16-Mar-2024 17:07:00.798 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:07:00.893 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [37915] milliseconds
16-Mar-2024 17:07:20.637 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:07:20.673 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:07:20.674 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:07:20.675 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:07:20.676 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:07:20.694 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:07:21.071 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:07:21.073 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:07:21.073 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:07:21.074 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:07:21.076 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:07:21.077 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:07:21.150 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:07:21.153 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:07:21.806 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:08:58.438 INFO [http-nio-8080-exec-8] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:08:58.455 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:08:58.455 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:08:58.456 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:08:58.456 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:08:58.470 INFO [http-nio-8080-exec-8] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:08:58.563 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:08:58.564 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:08:58.565 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:08:58.565 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:08:58.566 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:08:58.566 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:08:58.613 WARN [http-nio-8080-exec-8] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:08:58.615 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:08:59.158 INFO [http-nio-8080-exec-8] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:09:02.768 INFO [http-nio-8080-exec-9] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:09:02.778 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:09:02.779 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:09:02.780 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:09:02.780 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:09:02.784 INFO [http-nio-8080-exec-9] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:09:02.915 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:09:02.916 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:09:02.917 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:09:02.918 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:09:02.918 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:09:02.919 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:09:02.978 WARN [http-nio-8080-exec-9] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:09:02.982 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:09:03.478 INFO [http-nio-8080-exec-9] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:09:11.991 WARNING [http-nio-8080-exec-9] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["boek"]->entity.Boek["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:355)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 65 more
16-Mar-2024 17:09:23.176 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:09:23.198 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:09:23.199 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:09:23.199 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:09:23.202 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:09:23.219 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:09:23.341 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:09:23.342 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:09:23.342 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:09:23.343 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:09:23.343 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:09:23.344 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:09:23.388 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:09:23.389 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:09:23.906 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:09:23.975 WARNING [http-nio-8080-exec-4] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["boek"]->entity.Boek["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:355)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 65 more
16-Mar-2024 17:09:28.445 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:09:28.456 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:09:28.456 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:09:28.456 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:09:28.456 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:09:28.460 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:09:28.509 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:09:28.509 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:09:28.510 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:09:28.510 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:09:28.510 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:09:28.510 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:09:28.528 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:09:28.530 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:09:28.760 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:09:30.844 INFO [http-nio-8080-exec-7] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:09:30.847 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:09:30.848 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:09:30.848 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:09:30.848 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:09:30.850 INFO [http-nio-8080-exec-7] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:09:30.925 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:09:30.925 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:09:30.925 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:09:30.926 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:09:30.926 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:09:30.926 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:09:30.954 WARN [http-nio-8080-exec-7] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:09:30.955 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:09:31.225 INFO [http-nio-8080-exec-7] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:09:31.260 WARNING [http-nio-8080-exec-7] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["boek"]->entity.Boek["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:355)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 65 more
16-Mar-2024 17:09:50.394 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:09:50.406 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:09:50.407 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:09:50.407 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:09:50.407 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:09:50.415 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:09:50.485 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:09:50.485 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:09:50.485 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:09:50.486 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:09:50.486 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:09:50.486 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:09:50.516 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:09:50.516 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:09:50.779 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:10:05.182 WARNING [http-nio-8080-exec-10] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Lid["uitleningen"]->org.hibernate.collection.spi.PersistentBag[0]->entity.Uitlening["boek"]->entity.Boek["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:355)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 65 more
16-Mar-2024 17:47:55.114 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:47:55.137 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 17:47:55.240 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 17:47:55.241 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:47:55.242 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:47:55.243 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:47:55.244 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:47:55.248 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:47:55.249 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:47:55.251 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:47:55.252 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:47:55.253 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:47:55.315 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:47:55.339 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:48:08.810 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 17:48:08.824 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 17:48:08.826 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 17:48:08.826 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 17:48:08.827 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 17:48:08.827 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 17:48:08.828 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 17:48:08.828 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 17:48:08.829 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 17:48:08.830 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 17:48:08.830 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 17:48:08.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 17:48:08.873 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 17:48:08.874 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 17:48:08.874 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 17:48:08.875 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 17:48:08.875 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:55104,suspend=y,server=n
16-Mar-2024 17:48:08.875 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 17:48:08.876 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 17:48:08.876 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 17:48:08.876 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 17:48:08.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 17:48:08.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 17:48:08.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 17:48:08.887 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 17:48:08.911 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 17:48:09.920 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:48:10.008 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [1965] milliseconds
16-Mar-2024 17:48:10.222 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 17:48:10.223 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 17:48:10.262 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 17:48:19.039 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 17:48:19.515 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [120] milliseconds.
16-Mar-2024 17:48:21.973 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:48:22.744 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 17:48:22.790 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:48:22.794 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:48:22.795 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:48:22.803 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:48:23.167 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:48:25.074 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:48:25.102 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:48:25.103 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:48:25.104 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:48:25.104 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:48:25.130 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:48:27.218 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:48:27.237 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:48:33.260 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 17:48:41.164 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:48:45.375 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [35,114] ms
16-Mar-2024 17:48:45.391 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:48:45.463 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [35455] milliseconds
16-Mar-2024 17:49:18.968 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:49:18.986 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:49:18.987 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:49:18.988 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:49:18.988 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:49:18.999 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:49:19.109 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:49:19.110 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:49:19.110 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:49:19.111 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:49:19.112 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:49:19.112 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:49:19.161 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:49:19.163 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:49:19.732 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:49:41.419 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	java.lang.NoClassDefFoundError: com/fasterxml/jackson/module/jaxb/JaxbAnnotationIntrospector
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospector(JsonMapperConfigurator.java:111)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospectors(JsonMapperConfigurator.java:86)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.cfg.MapperConfiguratorBase._setAnnotations(MapperConfiguratorBase.java:123)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator.getDefaultMapper(JsonMapperConfigurator.java:47)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.locateMapper(ProviderBase.java:941)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase._endpointForWriting(ProviderBase.java:713)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:588)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1353)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1165)
		... 54 more
16-Mar-2024 17:49:59.049 INFO [http-nio-8080-exec-9] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:49:59.076 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:49:59.077 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:49:59.079 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:49:59.080 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:49:59.090 INFO [http-nio-8080-exec-9] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:49:59.198 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:49:59.199 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:49:59.199 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:49:59.200 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:49:59.201 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:49:59.203 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:49:59.250 WARN [http-nio-8080-exec-9] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:49:59.253 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:49:59.728 INFO [http-nio-8080-exec-9] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:02.411 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:02.416 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:02.416 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:02.417 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:02.417 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:02.428 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:02.584 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:02.585 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:02.587 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:02.588 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:02.589 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:02.590 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:02.642 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:02.646 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:03.200 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:20.285 INFO [http-nio-8080-exec-5] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:20.298 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:20.303 INFO [http-nio-8080-exec-7] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:20.320 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:20.321 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:20.324 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:20.320 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:20.324 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:20.324 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:20.325 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:20.326 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:20.326 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:20.327 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:20.327 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:20.327 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:20.343 INFO [http-nio-8080-exec-7] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:20.347 INFO [http-nio-8080-exec-5] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:20.349 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:20.455 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:20.455 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:20.456 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:20.456 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:20.456 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:20.456 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:20.457 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:20.457 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:20.458 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:20.458 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:20.458 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:20.458 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:20.497 WARN [http-nio-8080-exec-5] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:20.498 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:20.513 WARN [http-nio-8080-exec-7] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:20.514 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:20.517 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:20.519 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:20.520 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:20.523 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:20.523 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:20.524 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:20.558 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:20.559 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:20.997 INFO [http-nio-8080-exec-5] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:21.064 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:21.078 INFO [http-nio-8080-exec-7] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:21.164 WARNING [http-nio-8080-exec-3] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Uitlening["boek"]->entity.Boek["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:355)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 59 more
16-Mar-2024 17:50:30.488 INFO [http-nio-8080-exec-1] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:30.504 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:30.505 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:30.506 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:30.506 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:30.520 INFO [http-nio-8080-exec-1] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:30.612 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:30.613 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:30.613 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:30.613 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:30.614 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:30.614 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:30.649 WARN [http-nio-8080-exec-1] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:30.650 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:31.082 INFO [http-nio-8080-exec-1] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:35.127 INFO [http-nio-8080-exec-5] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:35.130 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:35.132 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:35.133 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:35.133 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:35.140 INFO [http-nio-8080-exec-5] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:35.218 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:35.219 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:35.219 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:35.220 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:35.220 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:35.220 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:35.252 WARN [http-nio-8080-exec-5] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:35.253 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:35.719 INFO [http-nio-8080-exec-5] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:36.853 INFO [http-nio-8080-exec-7] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:36.888 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:36.889 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:36.890 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:36.890 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:36.908 INFO [http-nio-8080-exec-7] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:37.024 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:37.026 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:37.027 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:37.027 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:37.027 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:37.028 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:37.074 WARN [http-nio-8080-exec-7] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:37.075 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:37.504 INFO [http-nio-8080-exec-7] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:38.639 INFO [http-nio-8080-exec-9] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:38.646 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:38.647 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:38.647 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:38.647 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:38.657 INFO [http-nio-8080-exec-9] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:38.665 INFO [http-nio-8080-exec-8] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:38.675 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:38.677 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:38.678 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:38.679 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:38.682 INFO [http-nio-8080-exec-1] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:38.690 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:38.690 INFO [http-nio-8080-exec-8] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:38.691 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:38.692 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:38.693 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:38.697 INFO [http-nio-8080-exec-1] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:38.776 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:38.777 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:38.777 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:38.778 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:38.778 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:38.779 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:38.805 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:38.806 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:38.807 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:38.807 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:38.807 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:38.808 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:38.809 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:38.810 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:38.811 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:38.811 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:38.812 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:38.813 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:38.825 WARN [http-nio-8080-exec-9] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:38.826 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:38.847 WARN [http-nio-8080-exec-1] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:38.848 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:38.857 WARN [http-nio-8080-exec-8] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:38.858 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:39.421 INFO [http-nio-8080-exec-1] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:39.451 INFO [http-nio-8080-exec-8] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:39.460 INFO [http-nio-8080-exec-9] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:39.481 WARNING [http-nio-8080-exec-9] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Uitlening["boek"]->entity.Boek["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:355)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 59 more
16-Mar-2024 17:50:43.621 INFO [http-nio-8080-exec-5] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:43.622 INFO [http-nio-8080-exec-7] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:43.622 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:50:43.631 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:43.631 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:43.631 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:50:43.631 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:43.631 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:43.631 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:50:43.632 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:43.632 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:43.632 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:50:43.632 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:43.632 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:43.632 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:50:43.644 INFO [http-nio-8080-exec-7] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:43.644 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:43.644 INFO [http-nio-8080-exec-5] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:50:43.709 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:43.709 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:43.709 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:50:43.710 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:43.710 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:43.710 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:43.710 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:43.710 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:50:43.710 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:43.710 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:50:43.710 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:43.711 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:43.711 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:43.711 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:50:43.711 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:43.711 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:43.711 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:50:43.712 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:50:43.737 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:43.739 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:43.739 WARN [http-nio-8080-exec-7] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:43.740 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:43.743 WARN [http-nio-8080-exec-5] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:50:43.743 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:50:44.098 INFO [http-nio-8080-exec-5] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:44.108 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:50:44.110 WARNING [http-nio-8080-exec-5] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session (through reference chain: java.util.ArrayList[0]->entity.Uitlening["boek"]->entity.Boek["uitleningen"])
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:402)
		at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:361)
		at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:323)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:780)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
		at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
		at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
		at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
		at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:648)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: entity.Boek.uitleningen: could not initialize proxy - no Session
		at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
		at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
		at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148)
		at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:355)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)
		at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
		at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
		at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
		... 59 more
16-Mar-2024 17:50:44.112 INFO [http-nio-8080-exec-7] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:58:49.145 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:58:49.172 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 17:58:49.228 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 17:58:49.230 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.231 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.232 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.235 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.238 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.239 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.240 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.241 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.242 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.244 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.245 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.246 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.247 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.249 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.251 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.251 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.252 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 17:58:49.283 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:58:49.309 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:59:02.413 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 17:59:02.426 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 17:59:02.427 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 17:59:02.428 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 17:59:02.429 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 17:59:02.429 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 17:59:02.430 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 17:59:02.430 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 17:59:02.431 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 17:59:02.431 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 17:59:02.432 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 17:59:02.468 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 17:59:02.470 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 17:59:02.470 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 17:59:02.471 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 17:59:02.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 17:59:02.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:55814,suspend=y,server=n
16-Mar-2024 17:59:02.473 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 17:59:02.473 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 17:59:02.474 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 17:59:02.474 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 17:59:02.474 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 17:59:02.475 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 17:59:02.475 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 17:59:02.483 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 17:59:02.503 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 17:59:03.517 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:59:03.610 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2028] milliseconds
16-Mar-2024 17:59:03.823 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 17:59:03.823 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 17:59:03.865 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 17:59:13.185 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 17:59:13.652 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [122] milliseconds.
16-Mar-2024 17:59:16.562 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 17:59:17.295 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 17:59:17.333 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 17:59:17.338 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 17:59:17.339 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 17:59:17.347 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 17:59:17.658 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 17:59:19.594 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 17:59:19.627 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 17:59:19.628 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 17:59:19.629 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 17:59:19.629 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 17:59:19.655 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 17:59:21.724 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 17:59:21.748 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 17:59:28.308 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 17:59:36.385 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 17:59:40.174 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [36,309] ms
16-Mar-2024 17:59:40.198 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 17:59:40.255 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [36644] milliseconds
16-Mar-2024 18:00:42.671 INFO [http-nio-8080-exec-6] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:00:42.687 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:00:42.688 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:00:42.688 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:00:42.688 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:00:42.703 INFO [http-nio-8080-exec-6] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:00:42.823 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:00:42.824 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:00:42.825 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:00:42.826 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:00:42.827 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:00:42.828 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:00:42.884 WARN [http-nio-8080-exec-6] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:00:42.887 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:00:43.497 INFO [http-nio-8080-exec-6] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:01:01.572 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:01:01.590 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:01:01.592 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:01:01.594 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:01:01.595 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:01:01.617 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:01:01.790 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:01:01.791 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:01:01.792 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:01:01.792 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:01:01.792 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:01:01.793 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:01:01.823 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:01:01.824 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:01:02.086 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:01:04.705 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:01:04.737 INFO [http-nio-8080-exec-5] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:01:04.748 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:01:04.749 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:01:04.749 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:01:04.749 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:01:04.750 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:01:04.755 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:01:04.756 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:01:04.756 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:01:04.760 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:01:04.780 INFO [http-nio-8080-exec-5] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:01:04.819 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:01:04.823 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:01:04.825 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:01:04.827 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:01:04.832 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:01:04.833 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:01:05.017 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:01:05.018 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:01:05.020 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:01:05.022 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:01:05.023 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:01:05.024 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:01:05.082 WARN [http-nio-8080-exec-5] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:01:05.084 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:01:05.119 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:01:05.120 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:01:05.120 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:01:05.121 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:01:05.122 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:01:05.122 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:01:05.124 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:01:05.125 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:01:05.126 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:01:05.126 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:01:05.127 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:01:05.128 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:01:05.170 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:01:05.172 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:01:05.176 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:01:05.178 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:01:05.899 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:01:05.963 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:01:06.116 INFO [http-nio-8080-exec-5] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:01:49.671 INFO [http-nio-8080-exec-1] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:01:49.671 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:01:49.677 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:01:49.697 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:01:49.697 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:01:49.698 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:01:49.698 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:01:49.698 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:01:49.699 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:01:49.699 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:01:49.699 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:01:49.700 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:01:49.700 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:01:49.700 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:01:49.701 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:01:49.720 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:01:49.725 INFO [http-nio-8080-exec-1] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:01:49.726 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:01:49.899 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:01:49.900 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:01:49.901 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:01:49.902 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:01:49.904 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:01:49.906 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:01:49.966 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:01:49.970 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:01:50.022 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:01:50.023 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:01:50.024 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:01:50.025 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:01:50.025 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:01:50.026 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:01:50.026 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:01:50.027 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:01:50.028 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:01:50.028 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:01:50.029 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:01:50.030 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:01:50.081 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:01:50.082 WARN [http-nio-8080-exec-1] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:01:50.083 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:01:50.084 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:01:51.172 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:01:51.431 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:01:51.475 INFO [http-nio-8080-exec-1] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:03:15.087 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:03:15.113 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 18:03:15.156 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 18:03:15.158 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.159 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.160 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.161 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.162 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.163 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.164 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.165 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.166 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.168 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:03:15.197 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:03:15.219 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:03:25.935 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 18:03:25.949 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 18:03:25.950 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 18:03:25.951 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 18:03:25.951 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 18:03:25.952 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 18:03:25.952 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 18:03:25.953 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 18:03:25.953 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 18:03:25.954 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 18:03:25.954 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:03:25.997 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 18:03:25.997 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 18:03:25.998 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 18:03:25.998 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 18:03:25.998 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 18:03:25.999 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:56099,suspend=y,server=n
16-Mar-2024 18:03:25.999 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:03:26.000 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 18:03:26.002 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 18:03:26.004 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 18:03:26.004 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 18:03:26.005 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 18:03:26.005 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 18:03:26.014 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 18:03:26.037 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 18:03:27.050 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:03:27.139 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2163] milliseconds
16-Mar-2024 18:03:27.349 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 18:03:27.350 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 18:03:27.391 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 18:03:36.550 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 18:03:37.078 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [125] milliseconds.
16-Mar-2024 18:03:39.438 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:03:40.306 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 18:03:40.347 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:03:40.351 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:03:40.351 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:03:40.357 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:03:40.696 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:03:42.585 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:03:42.612 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:03:42.613 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:03:42.613 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:03:42.614 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:03:42.638 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:03:44.625 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:03:44.645 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:03:51.349 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 18:03:59.915 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:04:04.682 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [37,290] ms
16-Mar-2024 18:04:04.694 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:04:04.777 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [37637] milliseconds
16-Mar-2024 18:05:00.476 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:05:00.477 INFO [http-nio-8080-exec-1] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:05:00.477 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:05:00.494 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:05:00.494 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:05:00.494 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:05:00.494 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:05:00.495 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:05:00.495 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:05:00.495 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:05:00.495 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:05:00.495 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:05:00.495 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:05:00.496 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:05:00.496 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:05:00.509 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:05:00.510 INFO [http-nio-8080-exec-1] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:05:00.510 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:05:00.660 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:05:00.660 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:05:00.660 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:05:00.661 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:05:00.661 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:05:00.661 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:05:00.662 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:05:00.662 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:05:00.662 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:05:00.663 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:05:00.663 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:05:00.663 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:05:00.664 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:05:00.664 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:05:00.664 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:05:00.665 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:05:00.665 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:05:00.665 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:05:00.730 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:05:00.732 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:05:00.750 WARN [http-nio-8080-exec-1] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:05:00.750 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:05:00.753 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:05:00.755 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:05:01.728 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:05:01.818 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:05:01.826 INFO [http-nio-8080-exec-1] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:05:04.708 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	java.lang.NoClassDefFoundError: com/fasterxml/jackson/module/jaxb/JaxbAnnotationIntrospector
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospector(JsonMapperConfigurator.java:111)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospectors(JsonMapperConfigurator.java:86)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.cfg.MapperConfiguratorBase._setAnnotations(MapperConfiguratorBase.java:123)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator.getDefaultMapper(JsonMapperConfigurator.java:47)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.locateMapper(ProviderBase.java:941)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase._endpointForWriting(ProviderBase.java:713)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:588)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1353)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1165)
		... 54 more
16-Mar-2024 18:06:51.321 INFO [http-nio-8080-exec-9] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:06:51.330 INFO [http-nio-8080-exec-8] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:06:51.356 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:06:51.373 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:06:51.373 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:06:51.374 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:06:51.375 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:06:51.378 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:06:51.379 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:06:51.379 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:06:51.379 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:06:51.380 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:06:51.380 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:06:51.381 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:06:51.381 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:06:51.395 INFO [http-nio-8080-exec-8] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:06:51.395 INFO [http-nio-8080-exec-9] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:06:51.395 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:06:51.589 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:06:51.589 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:06:51.591 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:06:51.593 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:06:51.590 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:06:51.595 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:06:51.596 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:06:51.595 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:06:51.596 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:06:51.597 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:06:51.598 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:06:51.600 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:06:51.613 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:06:51.614 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:06:51.615 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:06:51.616 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:06:51.617 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:06:51.617 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:06:51.659 WARN [http-nio-8080-exec-9] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:06:51.665 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:06:51.667 WARN [http-nio-8080-exec-8] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:06:51.681 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:06:51.681 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:06:51.681 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:06:52.521 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:06:52.555 INFO [http-nio-8080-exec-8] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:07:27.976 INFO [http-nio-8080-exec-9] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:07:57.399 INFO [http-nio-8080-exec-6] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:07:57.399 INFO [http-nio-8080-exec-5] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:07:57.399 INFO [http-nio-8080-exec-7] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:07:57.417 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:07:57.417 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:07:57.417 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:07:57.418 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:07:57.418 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:07:57.418 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:07:57.418 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:07:57.418 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:07:57.419 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:07:57.419 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:07:57.419 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:07:57.419 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:07:57.424 INFO [http-nio-8080-exec-5] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:07:57.424 INFO [http-nio-8080-exec-6] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:07:57.424 INFO [http-nio-8080-exec-7] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:07:57.541 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:07:57.541 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:07:57.542 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:07:57.542 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:07:57.543 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:07:57.545 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:07:57.566 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:07:57.567 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:07:57.568 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:07:57.568 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:07:57.568 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:07:57.569 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:07:57.575 WARN [http-nio-8080-exec-5] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:07:57.575 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:07:57.595 WARN [http-nio-8080-exec-6] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:07:57.596 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:07:57.614 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:07:57.614 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:07:57.615 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:07:57.615 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:07:57.616 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:07:57.616 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:07:57.642 WARN [http-nio-8080-exec-7] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:07:57.642 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:07:57.934 INFO [http-nio-8080-exec-6] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:07:57.948 INFO [http-nio-8080-exec-7] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:07:57.954 INFO [http-nio-8080-exec-5] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:08:54.881 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:08:54.883 INFO [http-nio-8080-exec-1] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:08:54.889 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:08:54.903 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:08:54.904 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:08:54.905 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:08:54.906 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:08:54.909 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:08:54.909 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:08:54.909 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:08:54.909 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:08:54.910 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:08:54.910 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:08:54.910 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:08:54.911 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:08:54.912 INFO [http-nio-8080-exec-1] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:08:54.912 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:08:54.912 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:08:54.981 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:08:54.981 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:08:54.981 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:08:54.982 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:08:54.982 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:08:54.984 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:08:54.984 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:08:54.985 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:08:54.986 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:08:54.987 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:08:54.987 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:08:54.988 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:08:54.988 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:08:54.988 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:08:54.988 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:08:54.986 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:08:54.993 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:08:54.994 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:08:55.040 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:08:55.040 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:08:55.041 WARN [http-nio-8080-exec-1] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:08:55.042 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:08:55.045 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:08:55.046 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:08:55.355 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:09:03.590 INFO [http-nio-8080-exec-1] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:09:03.663 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:09:40.095 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:09:40.095 INFO [http-nio-8080-exec-8] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:09:40.109 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:09:40.109 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:09:40.110 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:09:40.110 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:09:40.111 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:09:40.111 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:09:40.112 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:09:40.112 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:09:40.119 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:09:40.119 INFO [http-nio-8080-exec-8] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:09:40.172 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:09:40.172 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:09:40.173 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:09:40.173 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:09:40.173 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:09:40.173 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:09:40.173 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:09:40.173 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:09:40.174 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:09:40.174 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:09:40.175 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:09:40.175 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:09:40.192 WARN [http-nio-8080-exec-8] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:09:40.192 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:09:40.194 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:09:40.194 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:09:40.462 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:09:40.477 INFO [http-nio-8080-exec-8] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:14:32.278 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:14:32.305 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 18:14:32.349 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 18:14:32.351 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.352 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.353 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.354 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.356 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.357 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.358 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.359 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.360 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.361 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.362 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.363 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.364 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.365 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.367 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.370 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:14:32.395 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:14:32.440 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:14:38.735 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 18:14:38.752 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 18:14:38.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 18:14:38.754 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 18:14:38.755 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 18:14:38.755 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 18:14:38.756 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 18:14:38.757 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 18:14:38.757 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 18:14:38.758 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 18:14:38.758 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:14:38.794 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 18:14:38.795 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 18:14:38.796 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 18:14:38.796 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 18:14:38.797 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 18:14:38.797 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:56801,suspend=y,server=n
16-Mar-2024 18:14:38.798 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:14:38.798 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 18:14:38.799 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 18:14:38.799 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 18:14:38.799 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 18:14:38.800 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 18:14:38.800 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 18:14:38.811 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 18:14:38.828 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 18:14:39.810 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:14:39.896 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [1939] milliseconds
16-Mar-2024 18:14:40.115 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 18:14:40.116 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 18:14:40.159 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 18:14:49.026 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 18:14:49.529 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [126] milliseconds.
16-Mar-2024 18:14:51.850 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:14:52.685 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 18:14:52.730 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:14:52.740 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:14:52.741 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:14:52.750 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:14:53.095 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:14:54.991 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:14:55.021 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:14:55.021 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:14:55.022 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:14:55.022 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:14:55.047 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:14:57.017 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:14:57.038 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:15:03.282 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 18:15:11.144 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:15:14.981 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [34,822] ms
16-Mar-2024 18:15:14.992 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:15:15.061 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [35163] milliseconds
16-Mar-2024 18:15:21.030 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:15:21.039 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:15:21.026 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:15:21.051 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:15:21.052 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:15:21.053 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:15:21.054 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:15:21.056 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:15:21.057 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:15:21.058 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:15:21.059 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:15:21.059 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:15:21.059 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:15:21.059 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:15:21.060 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:15:21.073 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:15:21.076 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:15:21.081 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:15:21.228 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:15:21.229 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:15:21.230 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:15:21.231 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:15:21.232 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:15:21.232 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:15:21.265 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:15:21.266 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:15:21.266 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:15:21.268 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:15:21.268 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:15:21.268 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:15:21.270 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:15:21.271 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:15:21.271 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:15:21.272 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:15:21.272 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:15:21.273 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:15:21.296 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:15:21.298 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:15:21.326 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:15:21.326 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:15:21.327 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:15:21.328 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:15:22.225 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:15:22.232 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:15:22.242 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:15:38.739 INFO [http-nio-8080-exec-6] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:15:38.777 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:15:38.778 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:15:38.781 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:15:38.785 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:15:38.797 INFO [http-nio-8080-exec-6] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:15:38.917 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:15:38.918 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:15:38.919 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:15:38.920 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:15:38.920 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:15:38.921 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:15:38.958 WARN [http-nio-8080-exec-6] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:15:38.959 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:15:39.725 INFO [http-nio-8080-exec-6] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:15:47.639 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:15:47.645 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:15:47.638 INFO [http-nio-8080-exec-1] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:15:47.691 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:15:47.691 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:15:47.691 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:15:47.693 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:15:47.692 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:15:47.694 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:15:47.692 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:15:47.696 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:15:47.696 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:15:47.697 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:15:47.698 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:15:47.698 WARN [http-nio-8080-exec-1] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:15:47.731 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:15:47.733 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:15:47.735 INFO [http-nio-8080-exec-1] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:15:47.921 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:15:47.922 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:15:47.923 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:15:47.923 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:15:47.924 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:15:47.927 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:15:47.928 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:15:47.929 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:15:47.930 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:15:47.931 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:15:47.931 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:15:47.932 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:15:47.934 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:15:47.939 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:15:47.939 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:15:47.946 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:15:47.947 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:15:47.949 INFO [http-nio-8080-exec-1] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:15:48.010 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:15:48.010 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:15:48.013 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:15:48.015 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:15:48.053 WARN [http-nio-8080-exec-1] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:15:48.055 WARN [http-nio-8080-exec-1] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:15:48.756 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:15:48.826 INFO [http-nio-8080-exec-1] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:15:48.891 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:19:29.329 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:19:29.354 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 18:19:29.400 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 18:19:29.403 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:19:29.404 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:19:29.406 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:19:29.407 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:19:29.409 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:19:29.410 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:19:29.411 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:19:29.412 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:19:29.416 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:19:29.433 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:19:29.451 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:19:35.661 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 18:19:35.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 18:19:35.677 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 18:19:35.677 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 18:19:35.678 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 18:19:35.678 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 18:19:35.679 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 18:19:35.679 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 18:19:35.680 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 18:19:35.681 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 18:19:35.681 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:19:35.717 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 18:19:35.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 18:19:35.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 18:19:35.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 18:19:35.720 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 18:19:35.720 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:19:35.721 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 18:19:35.722 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 18:19:35.722 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 18:19:35.723 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 18:19:35.724 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\lib\idea_rt.jar=57112:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\bin
16-Mar-2024 18:19:35.725 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 18:19:35.733 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 18:19:35.759 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 18:19:36.690 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:19:36.752 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [1902] milliseconds
16-Mar-2024 18:19:36.930 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 18:19:36.931 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 18:19:36.980 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 18:19:43.396 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 18:19:43.415 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 18:19:43.416 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 18:19:43.416 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 18:19:43.417 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 18:19:43.418 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 18:19:43.418 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 18:19:43.419 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 18:19:43.420 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 18:19:43.421 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 18:19:43.421 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:19:43.465 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 18:19:43.466 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 18:19:43.466 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 18:19:43.468 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 18:19:43.468 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 18:19:43.469 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:57121,suspend=y,server=n
16-Mar-2024 18:19:43.469 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:19:43.470 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 18:19:43.471 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 18:19:43.471 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 18:19:43.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 18:19:43.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 18:19:43.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 18:19:43.480 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 18:19:43.500 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 18:19:44.643 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:19:44.705 SEVERE [main] org.apache.catalina.util.LifecycleBase.handleSubClassException Failed to initialize component [Connector["http-nio-8080"]]
	org.apache.catalina.LifecycleException: Protocol handler initialization failed
		at org.apache.catalina.connector.Connector.initInternal(Connector.java:1015)
		at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:127)
		at org.apache.catalina.core.StandardService.initInternal(StandardService.java:554)
		at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:127)
		at org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:1017)
		at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:127)
		at org.apache.catalina.startup.Catalina.load(Catalina.java:708)
		at org.apache.catalina.startup.Catalina.load(Catalina.java:731)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:568)
		at org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:302)
		at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:475)
	Caused by: java.net.BindException: Address already in use: bind
		at java.base/sun.nio.ch.Net.bind0(Native Method)
		at java.base/sun.nio.ch.Net.bind(Net.java:555)
		at java.base/sun.nio.ch.ServerSocketChannelImpl.netBind(ServerSocketChannelImpl.java:337)
		at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:294)
		at org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:247)
		at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:202)
		at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1282)
		at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:1295)
		at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:624)
		at org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:77)
		at org.apache.catalina.connector.Connector.initInternal(Connector.java:1013)
		... 13 more
16-Mar-2024 18:19:44.709 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2225] milliseconds
16-Mar-2024 18:19:44.956 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 18:19:44.957 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 18:19:45.033 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 18:19:49.699 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 18:19:50.315 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [154] milliseconds.
16-Mar-2024 18:19:53.332 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:19:54.291 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 18:19:54.338 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:19:54.342 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:19:54.343 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:19:54.351 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:19:54.789 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:19:56.520 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 18:19:57.188 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [164] milliseconds.
16-Mar-2024 18:19:57.212 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:19:57.247 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:19:57.248 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:19:57.249 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:19:57.249 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:19:57.284 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:19:59.584 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:19:59.607 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:20:00.132 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:20:00.975 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 18:20:01.016 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:20:01.020 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:20:01.021 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:20:01.028 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:20:01.398 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:20:03.479 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:20:03.513 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:20:03.514 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:20:03.515 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:20:03.516 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:20:03.542 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:20:05.869 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:20:05.893 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:20:06.416 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 18:20:12.803 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 18:20:14.695 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:20:18.951 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [41,970] ms
16-Mar-2024 18:20:18.960 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:20:19.015 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [42261] milliseconds
16-Mar-2024 18:20:21.310 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:20:25.458 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [40,424] ms
16-Mar-2024 18:20:25.478 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [40768] milliseconds
16-Mar-2024 18:20:25.480 SEVERE [main] org.apache.catalina.core.StandardServer.await Failed to create server shutdown socket on address [localhost] and port [8005] (base port [8005] and offset [0])
	java.net.BindException: Address already in use: bind
		at java.base/sun.nio.ch.Net.bind0(Native Method)
		at java.base/sun.nio.ch.Net.bind(Net.java:555)
		at java.base/sun.nio.ch.Net.bind(Net.java:544)
		at java.base/sun.nio.ch.NioSocketImpl.bind(NioSocketImpl.java:648)
		at java.base/java.net.ServerSocket.bind(ServerSocket.java:388)
		at java.base/java.net.ServerSocket.<init>(ServerSocket.java:274)
		at org.apache.catalina.core.StandardServer.await(StandardServer.java:577)
		at org.apache.catalina.startup.Catalina.await(Catalina.java:847)
		at org.apache.catalina.startup.Catalina.start(Catalina.java:795)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:568)
		at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
		at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
16-Mar-2024 18:20:25.481 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:20:25.482 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 18:20:25.549 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 18:20:25.550 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:20:25.551 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:20:25.572 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:20:25.576 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:20:28.963 INFO [Catalina-utility-2] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/api]
16-Mar-2024 18:20:29.016 WARNING [Catalina-utility-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 18:20:29.019 WARNING [Catalina-utility-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:20:29.020 WARNING [Catalina-utility-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:20:29.058 INFO [Catalina-utility-2] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 18:20:31.405 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:20:31.442 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 18:20:32.285 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1373)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:971)
		at com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:125)
		at com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:92)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:20:39.260 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 18:20:39.279 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 18:20:39.280 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 18:20:39.281 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 18:20:39.282 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 18:20:39.282 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 18:20:39.283 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 18:20:39.284 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 18:20:39.284 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 18:20:39.285 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 18:20:39.286 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:20:39.325 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 18:20:39.326 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 18:20:39.326 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 18:20:39.327 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 18:20:39.327 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 18:20:39.327 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:57178,suspend=y,server=n
16-Mar-2024 18:20:39.328 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:20:39.328 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 18:20:39.328 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 18:20:39.329 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 18:20:39.329 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 18:20:39.329 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 18:20:39.329 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 18:20:39.340 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 18:20:39.363 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 18:20:40.354 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:20:40.459 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [1969] milliseconds
16-Mar-2024 18:20:40.662 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 18:20:40.663 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 18:20:40.711 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 18:20:49.388 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 18:20:49.924 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [133] milliseconds.
16-Mar-2024 18:20:52.419 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:20:53.252 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 18:20:53.302 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:20:53.308 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:20:53.308 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:20:53.315 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:20:53.661 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:20:55.507 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:20:55.536 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:20:55.537 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:20:55.537 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:20:55.538 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:20:55.562 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:20:57.545 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:20:57.566 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:21:03.698 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 18:21:11.486 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:21:15.397 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [34,685] ms
16-Mar-2024 18:21:15.415 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:21:15.479 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [35018] milliseconds
16-Mar-2024 18:21:28.471 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:21:28.471 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:21:28.476 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:21:28.492 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:21:28.492 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:21:28.493 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:21:28.493 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:21:28.493 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:21:28.494 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:21:28.495 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:21:28.494 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:21:28.495 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:21:28.495 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:21:28.496 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:21:28.496 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:21:28.514 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:21:28.515 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:21:28.517 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:21:28.697 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:21:28.698 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:21:28.699 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:21:28.700 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:21:28.701 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:21:28.703 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:21:28.707 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:21:28.709 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:21:28.709 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:21:28.710 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:21:28.710 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:21:28.710 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:21:28.711 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:21:28.711 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:21:28.711 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:21:28.713 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:21:28.714 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:21:28.717 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:21:28.768 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:21:28.770 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:21:28.836 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:21:28.850 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:21:28.852 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:21:28.852 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:21:29.779 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:21:29.802 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:21:29.836 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:21:32.886 WARNING [http-nio-8080-exec-3] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	java.lang.NoClassDefFoundError: com/fasterxml/jackson/module/jaxb/JaxbAnnotationIntrospector
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospector(JsonMapperConfigurator.java:111)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospectors(JsonMapperConfigurator.java:86)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.cfg.MapperConfiguratorBase._setAnnotations(MapperConfiguratorBase.java:123)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator.getDefaultMapper(JsonMapperConfigurator.java:47)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.locateMapper(ProviderBase.java:941)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase._endpointForWriting(ProviderBase.java:713)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:588)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1353)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1165)
		... 54 more
16-Mar-2024 18:22:36.188 INFO [http-nio-8080-exec-8] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:22:36.207 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:22:36.229 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:22:36.230 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:22:36.231 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:22:36.232 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:22:36.268 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:22:36.269 INFO [http-nio-8080-exec-9] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:22:36.237 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:22:36.280 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:22:36.281 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:22:36.283 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:22:36.284 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:22:36.284 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:22:36.288 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:22:36.289 INFO [http-nio-8080-exec-8] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:22:36.290 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:22:36.326 INFO [http-nio-8080-exec-9] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:22:36.432 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:22:36.433 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:22:36.434 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:22:36.435 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:22:36.437 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:22:36.439 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:22:36.483 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:22:36.484 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:22:36.485 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:22:36.487 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:22:36.488 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:22:36.489 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:22:36.491 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:22:36.493 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:22:36.500 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:22:36.509 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:22:36.513 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:22:36.517 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:22:36.518 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:22:36.518 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:22:36.564 WARN [http-nio-8080-exec-8] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:22:36.567 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:22:36.605 WARN [http-nio-8080-exec-9] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:22:36.610 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:22:37.349 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:22:37.502 INFO [http-nio-8080-exec-8] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:23:23.469 INFO [http-nio-8080-exec-9] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:23:25.482 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:23:25.494 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Mar-2024 18:23:25.510 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [api] registered the JDBC driver [com.mysql.cj.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
16-Mar-2024 18:23:25.511 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/java.lang.Object.wait(Native Method)
 java.base@17.0.9/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:93)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:23:25.513 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:23:25.514 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:23:25.515 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:23:25.516 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:23:25.516 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:23:25.517 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:23:25.518 WARNING [Thread-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [api] appears to have started a thread named [Hibernate Connection Pool Validation Thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.9/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.9/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.9/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.9/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.9/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.9/java.lang.Thread.run(Thread.java:842)
16-Mar-2024 18:23:25.529 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:23:25.542 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:23:35.708 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/10.1.19
16-Mar-2024 18:23:35.729 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 19:36:50 UTC
16-Mar-2024 18:23:35.730 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 10.1.19.0
16-Mar-2024 18:23:35.731 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Mar-2024 18:23:35.731 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Mar-2024 18:23:35.732 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Mar-2024 18:23:35.733 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17
16-Mar-2024 18:23:35.734 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.9+11-LTS-201
16-Mar-2024 18:23:35.736 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Mar-2024 18:23:35.738 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\admin\Desktop\bp
16-Mar-2024 18:23:35.739 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:23:35.795 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Mar-2024 18:23:35.796 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Mar-2024 18:23:35.797 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Mar-2024 18:23:35.797 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Mar-2024 18:23:35.797 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Mar-2024 18:23:35.798 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:57372,suspend=y,server=n
16-Mar-2024 18:23:35.798 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=C:\Users\admin\Downloads\apache-tomcat-10.1.19-windows-x64
16-Mar-2024 18:23:35.798 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\admin\Desktop\bp
16-Mar-2024 18:23:35.799 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=C:\Users\admin\Desktop\bp\temp
16-Mar-2024 18:23:35.799 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\admin\Desktop\bp\conf\logging.properties
16-Mar-2024 18:23:35.799 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Mar-2024 18:23:35.800 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -javaagent:C:\Users\admin\AppData\Local\JetBrains\Toolbox\apps\IDEA-C\ch-0\223.8617.56\plugins\java\lib\rt\debugger-agent.jar
16-Mar-2024 18:23:35.802 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dfile.encoding=UTF-8
16-Mar-2024 18:23:35.814 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [2.0.7] using APR version [1.7.4].
16-Mar-2024 18:23:35.841 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.13 30 Jan 2024]
16-Mar-2024 18:23:36.890 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:23:37.005 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [2594] milliseconds
16-Mar-2024 18:23:37.218 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Mar-2024 18:23:37.219 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/10.1.19]
16-Mar-2024 18:23:37.266 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml]
16-Mar-2024 18:23:47.228 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Mar-2024 18:23:47.778 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [124] milliseconds.
16-Mar-2024 18:23:50.202 INFO [main] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:23:50.908 INFO [main] org.hibernate.Version.logVersion HHH000412: Hibernate ORM core version 6.4.2.Final
16-Mar-2024 18:23:50.946 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:23:50.949 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:23:50.950 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:23:50.957 WARN [main] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:23:51.297 INFO [main] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:23:53.180 WARN [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:23:53.207 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:23:53.207 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:23:53.208 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:23:53.209 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:23:53.231 INFO [main] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:23:55.157 WARN [main] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:23:55.176 WARN [main] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:24:02.508 INFO [main] org.hibernate.validator.internal.util.Version.<clinit> HV000001: Hibernate Validator 8.0.1.Final
16-Mar-2024 18:24:10.728 INFO [main] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:24:14.651 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [C:\Users\admin\Desktop\bp\conf\Catalina\localhost\api.xml] has finished in [37,383] ms
16-Mar-2024 18:24:14.686 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Mar-2024 18:24:14.753 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [37747] milliseconds
16-Mar-2024 18:24:23.254 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:24:23.254 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:24:23.254 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:24:23.279 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:24:23.279 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:24:23.279 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:24:23.280 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:24:23.280 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:24:23.280 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:24:23.280 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:24:23.281 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:24:23.281 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:24:23.282 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:24:23.282 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:24:23.283 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:24:23.296 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:24:23.296 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:24:23.296 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:24:23.472 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:24:23.473 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:24:23.474 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:24:23.475 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:24:23.476 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:24:23.477 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:24:23.550 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:24:23.553 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:24:23.615 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:24:23.616 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:24:23.617 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:24:23.618 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:24:23.618 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:24:23.619 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:24:23.695 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:24:23.698 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:24:23.743 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:24:23.747 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:24:23.752 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:24:23.760 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:24:23.761 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:24:23.769 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:24:24.010 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:24:24.017 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:24:24.560 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:24:24.573 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:24:25.293 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:24:34.551 WARNING [http-nio-8080-exec-3] org.glassfish.jersey.server.ServerRuntime$Responder.process An exception mapping did not successfully produce and processed a response. Logging the exception propagated to the default exception mapper.
	java.lang.NoClassDefFoundError: com/fasterxml/jackson/module/jaxb/JaxbAnnotationIntrospector
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospector(JsonMapperConfigurator.java:111)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator._resolveIntrospectors(JsonMapperConfigurator.java:86)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.cfg.MapperConfiguratorBase._setAnnotations(MapperConfiguratorBase.java:123)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.json.JsonMapperConfigurator.getDefaultMapper(JsonMapperConfigurator.java:47)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.locateMapper(ProviderBase.java:941)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase._endpointForWriting(ProviderBase.java:713)
		at org.glassfish.jersey.jackson.internal.jackson.jaxrs.base.ProviderBase.writeTo(ProviderBase.java:588)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:242)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:227)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:85)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:61)
		at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:139)
		at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1116)
		at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:677)
		at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:385)
		at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:375)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:264)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:240)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:697)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:357)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:842)
	Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1353)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1165)
		... 54 more
16-Mar-2024 18:25:03.626 INFO [http-nio-8080-exec-9] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:03.628 INFO [http-nio-8080-exec-10] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:03.639 INFO [http-nio-8080-exec-5] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:03.656 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:03.658 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:03.660 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:03.661 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:03.662 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:03.666 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:03.670 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:03.671 WARN [http-nio-8080-exec-10] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:03.662 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:03.673 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:03.674 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:03.677 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:03.680 INFO [http-nio-8080-exec-5] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:03.681 INFO [http-nio-8080-exec-10] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:03.687 INFO [http-nio-8080-exec-9] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:03.831 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:03.832 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:03.834 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:03.835 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:03.835 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:03.836 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:03.837 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:03.837 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:03.837 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:03.838 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:03.838 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:03.839 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:03.897 WARN [http-nio-8080-exec-9] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:03.896 WARN [http-nio-8080-exec-5] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:03.899 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:03.899 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:03.912 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:03.913 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:03.914 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:03.916 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:03.916 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:03.917 INFO [http-nio-8080-exec-10] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:03.957 WARN [http-nio-8080-exec-10] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:03.959 WARN [http-nio-8080-exec-10] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:04.588 INFO [http-nio-8080-exec-10] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:04.626 INFO [http-nio-8080-exec-9] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:26.858 INFO [http-nio-8080-exec-5] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:47.543 INFO [http-nio-8080-exec-8] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:47.543 INFO [http-nio-8080-exec-6] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:47.543 INFO [http-nio-8080-exec-7] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:47.552 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:47.552 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:47.552 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:47.553 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:47.553 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:47.553 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:47.553 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:47.553 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:47.553 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:47.553 WARN [http-nio-8080-exec-6] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:47.553 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:47.554 WARN [http-nio-8080-exec-7] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:47.561 INFO [http-nio-8080-exec-7] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:47.561 INFO [http-nio-8080-exec-8] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:47.561 INFO [http-nio-8080-exec-6] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:47.689 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:47.690 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:47.692 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:47.691 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:47.692 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:47.692 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:47.693 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:47.693 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:47.693 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:47.693 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:47.693 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:47.694 INFO [http-nio-8080-exec-7] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:47.701 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:47.702 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:47.704 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:47.705 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:47.705 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:47.706 INFO [http-nio-8080-exec-6] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:47.728 WARN [http-nio-8080-exec-8] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:47.728 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:47.728 WARN [http-nio-8080-exec-7] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:47.729 WARN [http-nio-8080-exec-7] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:47.784 WARN [http-nio-8080-exec-6] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:47.785 WARN [http-nio-8080-exec-6] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:48.192 INFO [http-nio-8080-exec-7] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:48.195 INFO [http-nio-8080-exec-8] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:48.239 INFO [http-nio-8080-exec-6] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:52.656 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:52.656 INFO [http-nio-8080-exec-9] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:52.657 INFO [http-nio-8080-exec-5] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:52.680 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:52.680 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:52.680 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:52.681 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:52.681 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:52.681 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:52.681 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:52.682 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:52.682 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:52.683 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:52.683 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:52.683 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:52.694 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:52.694 INFO [http-nio-8080-exec-9] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:52.694 INFO [http-nio-8080-exec-5] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:52.845 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:52.846 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:52.847 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:52.847 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:52.848 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:52.848 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:52.850 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:52.852 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:52.853 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:52.854 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:52.854 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:52.855 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:52.859 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:52.860 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:52.861 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:52.861 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:52.862 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:52.864 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:52.896 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:52.897 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:52.898 WARN [http-nio-8080-exec-9] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:52.902 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:52.921 WARN [http-nio-8080-exec-5] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:52.922 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:53.678 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:53.939 INFO [http-nio-8080-exec-4] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:53.950 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:53.951 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:53.951 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:53.952 WARN [http-nio-8080-exec-4] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:53.955 INFO [http-nio-8080-exec-4] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:54.107 INFO [http-nio-8080-exec-8] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:54.111 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:54.111 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:54.111 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:54.112 WARN [http-nio-8080-exec-8] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:54.115 INFO [http-nio-8080-exec-8] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:54.127 INFO [http-nio-8080-exec-2] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:54.140 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:54.142 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:54.155 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:54.209 WARN [http-nio-8080-exec-2] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:54.213 INFO [http-nio-8080-exec-2] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:54.340 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:54.341 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:54.344 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:54.346 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:54.348 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:54.351 INFO [http-nio-8080-exec-8] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:54.396 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:54.397 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:54.398 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:54.406 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:54.407 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:54.407 INFO [http-nio-8080-exec-4] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:54.427 WARN [http-nio-8080-exec-8] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:54.428 WARN [http-nio-8080-exec-8] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:54.451 WARN [http-nio-8080-exec-4] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:54.452 WARN [http-nio-8080-exec-4] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:54.537 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:54.544 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:54.545 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:54.547 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:54.550 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:54.551 INFO [http-nio-8080-exec-2] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:54.555 INFO [http-nio-8080-exec-5] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:54.629 WARN [http-nio-8080-exec-2] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:54.637 WARN [http-nio-8080-exec-2] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:54.683 INFO [http-nio-8080-exec-9] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:55.077 INFO [http-nio-8080-exec-8] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:55.090 INFO [http-nio-8080-exec-4] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:55.396 INFO [http-nio-8080-exec-2] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:57.074 INFO [http-nio-8080-exec-3] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:57.079 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:57.079 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:57.080 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:57.081 WARN [http-nio-8080-exec-3] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:57.085 INFO [http-nio-8080-exec-5] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:57.086 INFO [http-nio-8080-exec-3] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:57.091 INFO [http-nio-8080-exec-9] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation HHH000204: Processing PersistenceUnitInfo [name: unasat_persistence]
16-Mar-2024 18:25:57.098 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:57.099 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$6 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.user], use [jakarta.persistence.jdbc.user] instead
16-Mar-2024 18:25:57.099 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:57.099 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.lambda$normalizeConnectionAccessUserAndPass$12 HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.password], use [jakarta.persistence.jdbc.password] instead
16-Mar-2024 18:25:57.100 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:57.100 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.url], use [jakarta.persistence.jdbc.url] instead
16-Mar-2024 18:25:57.100 WARN [http-nio-8080-exec-5] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:57.100 WARN [http-nio-8080-exec-9] org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.normalizeDataAccess HHH90000021: Encountered deprecated setting [javax.persistence.jdbc.driver], use [jakarta.persistence.jdbc.driver] instead
16-Mar-2024 18:25:57.107 INFO [http-nio-8080-exec-9] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:57.108 INFO [http-nio-8080-exec-5] org.hibernate.cache.internal.RegionFactoryInitiator.initiateService HHH000026: Second-level cache disabled
16-Mar-2024 18:25:57.192 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:57.192 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:57.193 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:57.194 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:57.194 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:57.195 INFO [http-nio-8080-exec-5] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:57.205 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:57.212 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:57.212 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:57.213 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:57.215 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:57.215 INFO [http-nio-8080-exec-3] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:57.244 WARN [http-nio-8080-exec-5] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:57.249 WARN [http-nio-8080-exec-5] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:57.289 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure HHH10001002: Using built-in connection pool (not intended for production use)
16-Mar-2024 18:25:57.290 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
16-Mar-2024 18:25:57.290 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/beroepsProduct]
16-Mar-2024 18:25:57.291 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001001: Connection properties: {password=****, user=root}
16-Mar-2024 18:25:57.292 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator HHH10001003: Autocommit mode: false
16-Mar-2024 18:25:57.293 INFO [http-nio-8080-exec-9] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init> HHH10001115: Connection pool size: 20 (min=1)
16-Mar-2024 18:25:57.337 WARN [http-nio-8080-exec-3] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:57.338 WARN [http-nio-8080-exec-3] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:57.424 WARN [http-nio-8080-exec-9] org.hibernate.dialect.Dialect.checkVersion HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
16-Mar-2024 18:25:57.463 WARN [http-nio-8080-exec-9] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.constructDialect HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16-Mar-2024 18:25:58.023 INFO [http-nio-8080-exec-3] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:58.149 INFO [http-nio-8080-exec-5] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16-Mar-2024 18:25:58.166 INFO [http-nio-8080-exec-9] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
